/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: do not edit it. Instead, edit the BAML
// files and re-generate this code.
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code
import type { Image, Audio } from "@boundaryml/baml"
import type { Checked, Check } from "./types"
import type {  Dialogue,  DialogueTurn,  EventSourceType,  EvidencePointer,  EvidenceReference,  KeyMoment,  ModalityEvent,  PatientImageTurn,  SessionAnalysis,  SessionTheme,  SpeakerType,  TherapeuticObservation,  TurnSpecificVisualEvents,  TurnSpecificVisualObservations,  VisualObservation } from "./types"
import type * as types from "./types"

/******************************************************************************
*
*  These types are used for streaming, for when an instance of a type
*  is still being built up and any of its fields is not yet fully available.
*
******************************************************************************/

export interface StreamState<T> {
    value: T
    state: "Pending" | "Incomplete" | "Complete"
}

export namespace partial_types {
    
    export interface Dialogue {
        turns?: (partial_types.DialogueTurn | null)[]
    }
    
    export interface DialogueTurn {
        speaker?: (SpeakerType | null)
        utterance?: (string | null)
        timestamp_ms: ((number | null) | null)
        events?: (partial_types.ModalityEvent | null)[]
    }
    
    export interface EvidencePointer {
        turn_index?: (number | null)
        source?: (EventSourceType | null)
        event_index?: (number | null)
    }
    
    export interface EvidenceReference {
        summary?: (string | null)
        pointers: ((partial_types.EvidencePointer | null)[] | null)
    }
    
    export interface KeyMoment {
        turn_index?: (number | null)
        description?: (string | null)
        dialogue_snippet: ((string | null) | null)
        relevant_events?: (partial_types.ModalityEvent | null)[]
        image_correlation_notes: ((string | null) | null)
    }
    
    export interface ModalityEvent {
        source?: (EventSourceType | null)
        description?: (string | null)
        confidence: ((number | null) | null)
    }
    
    export interface PatientImageTurn {
        turn_index?: (number | null)
        image?: (string | null)
    }
    
    export interface SessionAnalysis {
        overall_summary?: (string | null)
        identified_themes?: (partial_types.SessionTheme | null)[]
        key_moments?: (partial_types.KeyMoment | null)[]
        therapeutic_observations?: (partial_types.TherapeuticObservation | null)[]
    }
    
    export interface SessionTheme {
        theme?: (string | null)
        evidence_turn_indices?: (number | null)[]
        evidence_summary: ((string | null) | null)
    }
    
    export interface TherapeuticObservation {
        turn_index?: (number | null)
        observation?: (string | null)
        evidence: ((partial_types.EvidenceReference | null) | null)
    }
    
    export interface TurnSpecificVisualEvents {
        turn_index?: (number | null)
        visual_events?: (partial_types.ModalityEvent | null)[]
    }
    
    export interface TurnSpecificVisualObservations {
        turn_index?: (number | null)
        visual_observations?: (partial_types.VisualObservation | null)[]
    }
    
    export interface VisualObservation {
        description?: (string | null)
        confidence: ((number | null) | null)
    }
    
}